class Transport:
    """
    –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –≤–∏–¥–æ–≤ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞.
    """
    def __init__(self, id, current_location, current_speed=0, battery_level=100):
        self.id = id
        self.current_speed = current_speed
        self.current_location = current_location
        self.battery_level = battery_level

    def move(self, new_location, speed):
        """
        –ò–∑–º–µ–Ω—è–µ—Ç –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–∫–æ—Ä–æ—Å—Ç—å, —É–º–µ–Ω—å—à–∞—è –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏.
        """
        required_charge = speed
        if self.battery_level >= required_charge:
            self.current_location = new_location
            self.current_speed = speed
            self.battery_level = max(0, self.battery_level - required_charge)
            print(f"–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç {self.id} –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –≤ {self.current_location}.")
        else:
            print("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞—Ä—è–¥–∞ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏.")

    def charge(self, amount):
        """
        –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏.
        """
        self.battery_level = min(100, self.battery_level + amount)
        print(f"–ë–∞—Ç–∞—Ä–µ—è –∑–∞—Ä—è–∂–µ–Ω–∞. –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {self.battery_level}%.")

    def get_info(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ.
        """
        return (f"ID: {self.id}, –°–∫–æ—Ä–æ—Å—Ç—å: {self.current_speed} –∫–º/—á, "
                f"–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {self.current_location}, –ó–∞—Ä—è–¥: {self.battery_level}%")

class ElectricScooter(Transport):
    """
    –ö–ª–∞—Å—Å –¥–ª—è —ç–ª–µ–∫—Ç—Ä–æ—Å–∞–º–æ–∫–∞—Ç–∞, –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç Transport.
    """
    def __init__(self, id, current_location, is_rented=False):
        super().__init__(id, current_location)
        self.is_rented = is_rented

    def move(self, new_location, speed):
        """
        –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–≤–∏–∂–µ–Ω–∏—è: —Å–∞–º–æ–∫–∞—Ç –¥–≤–∏–∂–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –∞—Ä–µ–Ω–¥–µ.
        """
        if self.is_rented:
            super().move(new_location, speed)
        else:
            print("–°–∞–º–æ–∫–∞—Ç –Ω–µ –∞—Ä–µ–Ω–¥–æ–≤–∞–Ω.")

class Drone(Transport):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –¥—Ä–æ–Ω–∞, –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç Transport.
    """
    def __init__(self, id, current_location, altitude=0):
        super().__init__(id, current_location)
        self.altitude = altitude

    def take_off(self, height):
        """
        –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤—ã—Å–æ—Ç—É –ø–æ–ª—ë—Ç–∞.
        """
        self.altitude += height
        print(f"–î—Ä–æ–Ω {self.id} –≤–∑–ª–µ—Ç–µ–ª –Ω–∞ –≤—ã—Å–æ—Ç—É {self.altitude} –º.")

    def land(self):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã—Å–æ—Ç—É –≤ 0.
        """
        self.altitude = 0
        self.current_speed = 0
        print(f"–î—Ä–æ–Ω {self.id} –ø—Ä–∏–∑–µ–º–ª–∏–ª—Å—è.")

    def move(self, new_location, speed):
        """
        –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–≤–∏–∂–µ–Ω–∏—è: –¥—Ä–æ–Ω –ª–µ—Ç–∏—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã—Å–æ—Ç–∞ > 0.
        """
        if self.altitude > 0:
            super().move(new_location, speed)
            print(f"–î—Ä–æ–Ω –ª–µ—Ç–∏—Ç –≤ {new_location} –Ω–∞ –≤—ã—Å–æ—Ç–µ {self.altitude} –º.")
        else:
            print("–î—Ä–æ–Ω –¥–æ–ª–∂–µ–Ω —Å–Ω–∞—á–∞–ª–∞ –≤–∑–ª–µ—Ç–µ—Ç—å.")

class GPSNavigator:
    """
    –ú–∏–∫—Å–∏–Ω –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
    """
    def calculate_route(self, from_location, to_location):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –º–∞—Ä—à—Ä—É—Ç–µ.
        """
        return f"–ü—Ä–æ–ª–æ–∂–µ–Ω –º–∞—Ä—à—Ä—É—Ç –∏–∑ {from_location} –≤ {to_location}."

class EmergencyLanding:
    """
    –ú–∏–∫—Å–∏–Ω –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–≤–∞—Ä–∏–π–Ω–æ–π –ø–æ—Å–∞–¥–∫–∏.
    """
    def perform_emergency_landing(self):
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã—Å–æ—Ç—É –∏ —Å–∫–æ—Ä–æ—Å—Ç—å –≤ 0, –∑–∞—Ä—è–¥ –±–∞—Ç–∞—Ä–µ–∏ –¥–æ 5%.
        """
        self.altitude = 0
        self.current_speed = 0
        self.battery_level = 5
        print("–ê–≤–∞—Ä–∏–π–Ω–∞—è –ø–æ—Å–∞–¥–∫–∞!")

class DeliveryDrone(Drone, GPSNavigator, EmergencyLanding):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –¥—Ä–æ–Ω–∞-–¥–æ—Å—Ç–∞–≤—â–∏–∫–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º.
    """
    def __init__(self, id, current_location, package=None):
        super().__init__(id, current_location)
        self.package = package

    def load_package(self, package_name):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ—Å—ã–ª–∫—É.
        """
        self.package = package_name
        print(f"–ü–æ—Å—ã–ª–∫–∞ '{self.package}' –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –Ω–∞ –¥—Ä–æ–Ω.")

    def deliver_package(self):
        """
        –î–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ—Å—ã–ª–∫—É, –µ—Å–ª–∏ –¥—Ä–æ–Ω –Ω–∞ –∑–µ–º–ª–µ.
        """
        if self.altitude == 0 and self.package is not None:
            print(f"–ü–æ—Å—ã–ª–∫–∞ '{self.package}' –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞!")
            self.package = None
        else:
            if self.package is None:
                print("–ù–µ—Ç –ø–æ—Å—ã–ª–∫–∏ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏.")
            else:
                print("–î–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ—Å—ã–ª–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–∑–µ–º–ª–∏—Ç—å—Å—è.")

    def get_info(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –≤–∫–ª—é—á–∞—è –¥–∞–Ω–Ω—ã–µ –æ –ø–æ—Å—ã–ª–∫–µ.
        """
        base_info = super().get_info()
        package_info = f"–ü–æ—Å—ã–ª–∫–∞: {'–ù–µ—Ç' if self.package is None else self.package}"
        return f"{base_info}, {package_info}"


if __name__ == "__main__":
    # 1. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–∞—Å—Å–∞ Transport
    print("--- üöó –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Transport ---")
    car = Transport(id="T-001", current_location="–ü–∞—Ä–∫–æ–≤–∫–∞ –ê")
    print(car.get_info())
    car.move(new_location="–¶–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞", speed=50)
    print(car.get_info())
    car.charge(20)
    print(car.get_info())
    car.move("–°–∫–ª–∞–¥", speed=90)


    # 2. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∞—Å—Å–∞ ElectricScooter
    print("--- üõ¥ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è ElectricScooter ---")
    scooter = ElectricScooter(id="S-123", current_location="–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ")
    print(scooter.get_info())
    scooter.move("–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å", speed=15)
    scooter.is_rented = True
    print("–°–∞–º–æ–∫–∞—Ç –∞—Ä–µ–Ω–¥–æ–≤–∞–Ω.")
    scooter.move("–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å", speed=15)
    print(scooter.get_info())
    scooter.is_rented = False
    print("–ê—Ä–µ–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


    # 3. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∞—Å—Å–∞ Drone
    print("--- üöÅ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Drone ---")
    simple_drone = Drone(id="D-01", current_location="–ë–∞–∑–∞")
    print(simple_drone.get_info())
    simple_drone.move("–¢–æ—á–∫–∞ –ë", speed=100)
    simple_drone.take_off(50)
    simple_drone.move("–¢–æ—á–∫–∞ –ë", speed=100)
    print(simple_drone.get_info())
    simple_drone.land()
    print(simple_drone.get_info())


    # 4. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∞—Å—Å–∞ DeliveryDrone
    print("--- üì¶ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è DeliveryDrone ---")
    delivery_drone = DeliveryDrone(id="DD-555", current_location="–°–∫–ª–∞–¥")
    print(delivery_drone.get_info())
    print(delivery_drone.calculate_route(from_location="–°–∫–ª–∞–¥", to_location="–î–æ–º –∫–ª–∏–µ–Ω—Ç–∞"))
    delivery_drone.load_package("–ù–æ–≤—ã–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω")
    delivery_drone.deliver_package()
    delivery_drone.take_off(100)
    delivery_drone.move("–î–æ–º –∫–ª–∏–µ–Ω—Ç–∞", speed=80)
    print(delivery_drone.get_info())
    delivery_drone.land()
    delivery_drone.deliver_package()
    print(delivery_drone.get_info())
    delivery_drone.take_off(150)
    print("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å...")
    delivery_drone.perform_emergency_landing()
    print(delivery_drone.get_info())